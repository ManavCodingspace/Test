Create a class Student containing fields for Roll No., Name, Class, Year and Total
Marks. Write a program to store 5 objects of Student class in a file. Retrieve these
records from the file and display them.

#include <iostream>
#include <fstream>
#include <string>
using namespace std;


class student {

public:
   int rollno = 0;
   int year = 0;
   int totalmarks = 0;
   string className;
   string name;

    student(int rollno, const string& n, const string& cls, int yr, double marks): rollno(rollno), name(n), className(cls), year(yr), totalmarks(marks) {}


    void display() {

        cout<<"Roll no : "<< rollno << endl;
        cout << "Name: "<<name << endl;
        cout << "Class : "<< className << endl;
        cout << "Year: " << year << endl;
        cout << "Toatal marks : "<< totalmarks << endl;
    }

    void writeToFile(ofstream& fout) {

        fout << rollno << " " <<name << " " << className << " " << year << " " << totalmarks << " " << endl;
    } 

    void readToFile(ifstream& fin) { 
        fin >> rollno >> className >> name >> year>> totalmarks;
    }  


};

int main() {
    // Create 5 student objects
    student students[] = {
        student(101, "Alice", "Class 10", 2024, 450),
        student(102, "Bob", "Class 11", 2023, 480),
        student(103, "Charlie", "Class 12", 2022, 490),
        student(104, "David", "Class 9", 2025, 430),
        student(105, "Eva", "Class 8", 2026, 410)
    };

    // Write student details to a file
    ofstream fout("students.txt");
    if (!fout) {
        cerr << "Error opening file for writing." << endl;
        return 1;
    }

    for (const auto& student : students) {
        student.writeToFile(fout);
    }
    fout.close();

    // Read student details from the file and display them
    ifstream fin("students.txt");
    if (!fin) {
        cerr << "Error opening file for reading." << endl;
        return 1;
    }

    cout << "Student Records:" << endl;
    while (!fin.eof()) {
        student student(0, "", "", 0, 0); // Temporary student object
        student.readToFile(fin);
        student.display();
        cout << endl;
    }
    fin.close();

    return 0;
}
