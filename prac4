Write a menu driven program to perform string manipulation (without using inbuilt
string functions):
a. Show address of each character in string
b. Concatenate two strings.
c. Compare two strings
d. Calculate length of the string (use pointers)
e. Convert all lowercase characters to uppercase
f. Reverse the string
g. Insert a string in another string at a user specified position

#include <iostream>
#include <cstring>

using namespace std;

// Function to display the address of each character in the string
void showAddress(const char* str) {
    cout << "Address of each character in the string:" << endl;
    while (*str != '\0') {
        cout << *str << ": " << static_cast<const void*>(str) << endl;
        str++;
    }
}

// Function to concatenate two strings
char* concatenate(const char* str1, const char* str2) {
    int len1 = strlen(str1);
    int len2 = strlen(str2);
    char* result = new char[len1 + len2 + 1];

    strcpy(result, str1);
    strcat(result, str2);

    return result;
}

// Function to compare two strings
int compare(const char* str1, const char* str2) {
    return strcmp(str1, str2);
}

// Function to calculate the length of the string using pointers
int length(const char* str) {
    int len = 0;
    while (*str != '\0') {
        len++;
        str++;
    }
    return len;
}

// Function to convert all lowercase characters to uppercase
void toUpperCase(char* str) {
    while (*str != '\0') {
        if (*str >= 'a' && *str <= 'z') {
            *str = *str - 32; // Convert to uppercase
        }
        str++;
    }
}

// Function to reverse the string
void reverse(char* str) {
    int len = strlen(str);
    for (int i = 0; i < len / 2; i++) {
        char temp = str[i];
        str[i] = str[len - i - 1];
        str[len - i - 1] = temp;
    }
}

// Function to insert a string into another string at a user-specified position
void insertString(char* mainStr, const char* subStr, int position) {
    int lenMain = strlen(mainStr);
    int lenSub = strlen(subStr);
    
    if (position < 0 || position > lenMain) {
        cout << "Invalid position!" << endl;
        return;
    }
    
    char* temp = new char[lenMain + lenSub + 1];
    
    strncpy(temp, mainStr, position);
    temp[position] = '\0';
    strcat(temp, subStr);
    strcat(temp, mainStr + position);
    
    strcpy(mainStr, temp);
    
    delete[] temp;
}

int main() {
    char str1[100], str2[100];
    int choice, position;

    cout << "Enter first string: ";
    cin.getline(str1, 100);
    cout << "Enter second string: ";
    cin.getline(str2, 100);

    cout << "Menu:\n"
         << "1. Show address of each character in string\n"
         << "2. Concatenate two strings\n"
         << "3. Compare two strings\n"
         << "4. Calculate length of the string\n"
         << "5. Convert all lowercase characters to uppercase\n"
         << "6. Reverse the string\n"
         << "7. Insert a string into another string at a user specified position\n"
         << "Enter your choice: ";
    cin >> choice;

    switch (choice) {
        case 1:
            showAddress(str1);
            showAddress(str2);
            break;
        case 2: {
            char* concatenatedStr = concatenate(str1, str2);
            cout << "Concatenated string: " << concatenatedStr << endl;
            delete[] concatenatedStr;
            break;
        }
        case 3:
            if (compare(str1, str2) == 0)
                cout << "Strings are equal." << endl;
            else
                cout << "Strings are not equal." << endl;
            break;
        case 4:
            cout << "Length of first string: " << length(str1) << endl;
            cout << "Length of second string: " << length(str2) << endl;
            break;
        case 5:
            toUpperCase(str1);
            toUpperCase(str2);
            cout << "Strings converted to uppercase: " << str1 << " " << str2 << endl;
            break;
        case 6:
            reverse(str1);
            reverse(str2);
            cout << "Reversed strings: " << str1 << " " << str2 << endl;
            break;
        case 7:
            cout << "Enter position to insert string into first string: ";
            cin >> position;
            insertString(str1, str2, position);
            cout << "Modified first string after insertion: " << str1 << endl;
            break;
        default:
            cout << "Invalid choice!" << endl;
    }

    return 0;
}
